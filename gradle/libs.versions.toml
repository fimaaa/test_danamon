## Generated by $ ./gradlew refreshVersionsCatalog

[bundles]



[plugins]



[versions]

agp = "8.3.0"
androidAdvancedwebview = "v3.2.1"

gradle = "8.3.0"
gradlePlugin = "1.9.22"
googleService = "4.4.1"
firebaseCrashlytics = "2.9.9"
firebaseBOM = "32.7.4"
kotlinVersion = "1.6.21"
navigation = "2.7.7"
hiltGradle = "2.51"
daggerVersion = "2.51"
appCompatVersion = "1.6.1"
constraintLayoutVersion = "2.1.4"
materialVersion = "1.11.0"
espressoVersion = "3.5.1"
glideVersion = "4.16.0"
glideVector = "v2.0.0"
junitVersion = "4.13.2"
jUnitJupiterVersion = "5.10.2"
mockk = "1.13.10"
roboElectric = "4.11.1"
ktxVersion = "1.12.0"
pagingVersion = "3.2.1"
retrofitVersion = "2.9.0"
retrofitCoroutines = "0.9.2"
moshi = "1.15.1"
testExtJunitVersion = "1.1.5"
leakCanaryVersion = "2.13"
chuckerVersion = "4.0.0"
gooleAuth = "21.0.0"
googleAds = "23.0.0"
gooleMaps = "18.2.0"
googleLocation = "21.2.0"
googleFlexbox = "2.0.1"
gson = "2.10.1"
googleAR = "1.41.0"
roomVersion = "2.6.1"
androidXDataStore = "1.0.0"
cameraXVersion = "1.3.2"
test = "1.5.2"
truth = "1.4.2"
mockito = "5.11.0"
coroutinesTest = "1.8.0"
archCore = "2.2.0"
recyclerView = "1.3.2"
anko = "0.10.8"
rxAndroid = "2.1.1"
rxJava = "2.2.21"
rxBinding = "2.2.0"
okhttpLogging = "4.12.0"
lifeCycle = "2.7.0"
lifeCycleExt = "2.2.0"
localeHelper = "1.5.1"
skeletonLayout = "5.0.0"
progressButton = "2.1.0"
skyDovesSandwich = "1.3.5"
timber = "5.0.1"
gcacaceSignaturePad = "1.3.1"
dhavaImagePicker = "2.1"
zeloryCompressor = "3.0.1"
multiDex = "2.0.1"
composeLifeCycle = "2.7.0"
composeActivity = "1.8.2"
composeViewModel = "2.7.0"
webSocket = "1.5.6"
swipeRefresh = "1.1.0"
customCrash = "2.4.0"
photoView = "2.3.0"
dataBindingCompiler = "4.0.1"
daggerHiltViewmodel = "1.2.0"
geoHash = "1.0"
composeBom = "2024.02.02"

[libraries]

# Library Project
agp = { module = "com.android.tools.build:gradle", version.ref = "agp" }
advancedWebView = { module = "com.github.delight-im:Android-AdvancedWebView", version.ref = "androidAdvancedwebview" }
gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "gradlePlugin" }
navigation = { module = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "navigation" }
daggerHilt-gradle = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hiltGradle" }
googleService = { module = "com.google.gms:google-services", version.ref = "googleService" }
firebaseCrashlytics-gradle = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "firebaseCrashlytics" }

# Library Android
kotlinX = { module = "androidx.core:core-ktx", version.ref = "ktxVersion" }
appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompatVersion" }
constrainLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayoutVersion" }
googleMaterial = { module = "com.google.android.material:material", version.ref = "materialVersion" }
recyclerView = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerView" }
googleAR = { module = "com.google.ar:core", version.ref = "googleAR" }

cameraView = { module = "androidx.camera:camera-view", version.ref = "cameraXVersion" }
cameraCore = { module = "androidx.camera:camera-core", version.ref = "cameraXVersion" }
camera2 = { module = "androidx.camera:camera-camera2", version.ref = "cameraXVersion" }
cameraLifeCycle = { module = "androidx.camera:camera-lifecycle", version.ref = "cameraXVersion" }

leakCanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakCanaryVersion" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofitVersion" }
retrofitRX = { module = "com.squareup.retrofit2:adapter-rxjava2", version.ref = "retrofitVersion" }
retrofitCoroutines = { module = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter", version.ref = "retrofitCoroutines" }
retrofitConverterGson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofitVersion" }
rxAndroid = { module = "io.reactivex.rxjava2:rxandroid", version.ref = "rxAndroid" }
rxJava = { module = "io.reactivex.rxjava2:rxjava", version.ref = "rxJava" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshiKotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
retrofitConverterMoshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofitVersion" }

okhttpPlatform = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttpLogging" }
okHttp = { module = "com.squareup.okhttp3:okhttp" }
okhttpLogging = { module = "com.squareup.okhttp3:logging-interceptor" }

roomRuntime = { module = "androidx.room:room-runtime", version.ref = "roomVersion" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "roomVersion" }
room = { module = "androidx.room:room-ktx", version.ref = "roomVersion" }
roomCommon = { module = "androidx.room:room-common-ktx", version.ref = "roomVersion" }
roomTesting = { module = "androidx.room:room-testing", version.ref = "roomVersion" }
roomPaging = { module = "androidx.room:room-paging", version.ref = "roomVersion" }

androidXDataStore = { module = "androidx.datastore:datastore-preferences", version.ref = "androidXDataStore" }

lifeCycleViewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifeCycle" }
lifeCycleLivedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifeCycle" }
lifeCycleExt = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "lifeCycleExt" }

dataBindingCompiler = { module = "com.android.databinding:compiler", version.ref = "dataBindingCompiler" }
rxBinding = { module = "com.jakewharton.rxbinding2:rxbinding", version.ref = "rxBinding" }

navigationFragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
navigationUi = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }

daggerHilt = { module = "com.google.dagger:hilt-android", version.ref = "daggerVersion" }
daggerHiltCompiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "daggerVersion" }

daggerHiltViewmodel = { module = "androidx.hilt:hilt-lifecycle-viewmodel", version.ref = "daggerHiltViewmodel" }
daggerHiltViewModelCompiler = { module = "androidx.hilt:hilt-compiler", version.ref = "daggerHiltViewmodel" }

glide = { module = "com.github.bumptech.glide:glide", version.ref = "glideVersion" }
glideCompiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glideVersion" }
glideToVector = { module = "com.github.corouteam:GlideToVectorYou", version.ref = "glideVector" }

localeHelper = { module = "com.zeugmasolutions.localehelper:locale-helper-android", version.ref = "localeHelper" }

paging3 = { module = "androidx.paging:paging-runtime-ktx", version.ref = "pagingVersion" }

chuckerActive = { module = "com.github.chuckerteam.chucker:library", version.ref = "chuckerVersion" }
chuckerDisable = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "chuckerVersion" }

gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
googleAuth = { module = "com.google.android.gms:play-services-auth", version.ref = "gooleAuth" }
googleAds = { module = "com.google.android.gms:play-services-ads", version.ref = "googleAds" }
googleMaps = { module = "com.google.android.gms:play-services-maps", version.ref = "gooleMaps" }
googleLocation = { module = "com.google.android.gms:play-services-location", version.ref = "googleLocation" }
googleFlexbox = { module = "com.google.android:flexbox", version.ref = "googleFlexbox" }

firebaseBOM = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBOM" }
firebaseCrashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebaseAnalytics = { module = "com.google.firebase:firebase-analytics-ktx" }
firebaseAuth = { module = "com.google.firebase:firebase-auth-ktx" }
firebaseNotification = { module = "com.google.firebase:firebase-messaging-ktx" }
firebaseInAppMessage = { module = "com.google.firebase:firebase-inappmessaging-display-ktx" }
firebaseDatabase = { module = "com.google.firebase:firebase-database-ktx" }
firebaseConfig = { module = "com.google.firebase:firebase-config-ktx" }

geoHash = { module = "com.github.drfonfon:android-kotlin-geohash", version.ref = "geoHash" }

skeletonLayout = { module = "com.faltenreich:skeletonlayout", version.ref = "skeletonLayout" }
progressButton = { module = "com.github.razir.progressbutton:progressbutton", version.ref = "progressButton" }

gcacaceSignaturePad = { module = "com.github.gcacace:signature-pad", version.ref = "gcacaceSignaturePad" }

dhavaImagePicker = { module = "com.github.dhaval2404:imagepicker", version.ref = "dhavaImagePicker" }
zeloryCompressor = { module = "id.zelory:compressor", version.ref = "zeloryCompressor" }

#|# Compose
composeBom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }

composeMaterial3 = { module = "androidx.compose.material3:material3" }
composeMaterial2 = { module = "androidx.compose.material:material" }
composeFoundation = { module = "androidx.compose.foundation:foundation" }
composeUI = { module = "androidx.compose.ui:ui" }

composeUIPreview = { module = "androidx.compose.ui:ui-tooling-preview" }
composeUITool = { module = "androidx.compose.ui:ui-tooling" }

composeMaterialIconCore = { module = "androidx.compose.material:material-icons-core" }
composeMaterialIconExt = { module = "androidx.compose.material:material-icons-extended" }
composeWindowsSize = { module = "androidx.compose.material3:material3-window-size-class" }

composeLiveData = { module = "androidx.compose.runtime:runtime-livedata" }
composeRXJava = { module = "androidx.compose.runtime:runtime-rxjava2" }
composeLifeCycle = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "composeLifeCycle" }
composeActivity = { module = "androidx.activity:activity-compose", version.ref = "composeActivity" }
composeViewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "composeViewModel" }

#|# COmpose

multiDex = { module = "androidx.multidex:multidex", version.ref = "multiDex" }

webSocket = { module = "org.java-websocket:Java-WebSocket", version.ref = "webSocket" }
swipeRefresh = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "swipeRefresh" }
customCrash = { module = "cat.ereza:customactivityoncrash", version.ref = "customCrash" }
photoView = { module = "com.github.chrisbanes:PhotoView", version.ref = "photoView" }

junit = { module = "junit:junit", version.ref = "junitVersion" }
junit-test = { module = "androidx.test.ext:junit", version.ref = "testExtJunitVersion" }
junitjupiter-test = { module = "org.junit.jupiter:junit-jupiter", version.ref = "jUnitJupiterVersion" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

roboElectric = { module = "org.robolectric:robolectric", version.ref = "roboElectric" }

espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoVersion" }
testRunner = { module = "androidx.test:runner", version.ref = "test" }
testRules = { module = "androidx.test:rules", version.ref = "test" }

composeTestJunit4 = { module = "androidx.compose.ui:ui-test-junit4" }
composeTestManifest = { module = "androidx.compose.ui:ui-test-manifest" }

dagger = { module = "com.google.dagger:dagger-compiler", version.ref = "daggerVersion" }
daggerHiltTesting = { module = "com.google.dagger:hilt-android-testing", version.ref = "daggerVersion" }

truth = { module = "com.google.truth:truth", version.ref = "truth" }

mockitoCore = { module = "org.mockito:mockito-core", version.ref = "mockito" }

coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutinesTest" }

archCore = { module = "androidx.arch.core:core-testing", version.ref = "archCore" }

#= { module = "", version.ref = "" }
